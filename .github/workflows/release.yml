name: Build QEMU on version tag

on:
  push:
    tags:
      - v*

jobs:
  build-mac:
    runs-on: macos-14
    steps:
        - name: Download dependencies
          run: |
            brew upgrade
            
            brew install libtool bison capstone dbus \
                 dtc flex gettext git glib gnutls \
                 jpeg-turbo libffi libgcrypt \
                 libpng libslirp libssh libusb lzo make meson \
                 nettle ninja pixman pkg-config python@3.10 \
                 snappy spice-protocol vde zlib zstd p7zip

            pip3 install tomli
        - name: Fetch QEMU distribution
          run: |
            wget https://download.qemu.org/qemu-${GITHUB_REF_NAME#"v"}.tar.xz
            tar -xf qemu-${GITHUB_REF_NAME#"v"}.tar.xz
        - name: Build
          run: |
            cd qemu-${GITHUB_REF_NAME#"v"}

            export PYTHON=$HOMEBREW_PREFIX/opt/python@3.10/libexec/bin/python3
            ./configure --prefix=$(pwd)/qemu \
                        --disable-bsd-user \
                        --disable-guest-agent \
                        --disable-sdl \
                        --disable-gtk \
                        --disable-werror \
                        --enable-hvf \
                        --enable-vmnet \
                        --enable-cocoa \
                        --enable-strip
                        
            gmake install
            7z a qemu-mac-arm64.zip ./qemu
            
        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with: 
            name: mac-arm64
            path: ${{ github.workspace }}/qemu-*/qemu-mac-arm64.zip
            if-no-files-found: error
  build-linux:
   runs-on: ubuntu-latest
   steps:
       - name: Download dependencies
         run: |
           sudo pip3 install meson tomli
           sudo apt update
           sudo apt install git libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev ninja-build \
                            libaio-dev libbluetooth-dev libcapstone-dev libbrlapi-dev libbz2-dev \
                            libcap-ng-dev libcurl4-gnutls-dev libgtk-3-dev \
                            libibverbs-dev libncurses5-dev libnuma-dev \
                            librbd-dev librdmacm-dev \
                            libsasl2-dev libsdl2-dev libseccomp-dev libsnappy-dev libssh-dev \
                            libvde-dev libvdeplug-dev libvte-2.91-dev libxen-dev liblzo2-dev \
                            libnfs-dev libiscsi-dev libzstd-dev p7zip-full
        
       - name: Fetch QEMU distribution
         run: |
           wget https://download.qemu.org/qemu-${GITHUB_REF_NAME#"v"}.tar.xz
           tar -xf qemu-${GITHUB_REF_NAME#"v"}.tar.xz
       - name: Build
         run: |
           cd qemu-${GITHUB_REF_NAME#"v"}
           ./configure --prefix=$(pwd)/qemu \
                       --disable-bsd-user \
                       --disable-guest-agent \
                       --enable-slirp \
                       --enable-capstone \
                       --enable-curses \
                       --enable-fdt=system \
                       --enable-libssh \
                       --enable-vde \
                       --enable-virtfs \
                       --enable-zstd \
                       --extra-cflags=-DNCURSES_WIDECHAR=1 \
                       --enable-kvm \
                       --disable-xen \
                       --disable-sdl \
                       --disable-vnc-jpeg \
                       --enable-gtk \
                       --enable-strip
                        
           cd build
           meson compile && meson install
           cd ..
           7z a qemu-linux-x64.zip ./qemu
       - name: Upload Artifact
         uses: actions/upload-artifact@v4
         with:
           name: linux-x64
           path: ${{ github.workspace }}/qemu-*/qemu-linux-x64.zip
           if-no-files-found: error

  build-win64:
   runs-on: windows-latest
   steps:
     - name: Setup MSYS2 and install dependencies
       uses: msys2/setup-msys2@v2
       with:
         update: true
         install: >-
           base-devel
           mingw-w64-x86_64-toolchain 
           git 
           python 
           ninja
           mingw-w64-x86_64-glib2 
           mingw-w64-x86_64-pixman 
           python-setuptools
           mingw-w64-x86_64-gtk3 
           mingw-w64-x86_64-SDL2 
           mingw-w64-x86_64-libslirp 
           mingw-w64-x86_64-meson
           mingw-w64-x86_64-python-tomli
           mingw-w64-x86_64-capstone
           mingw-w64-x86_64-zstd
           mingw-w64-x86_64-libssh
           mingw-w64-x86_64-7zip
           
     - name: Get distribution of QEMU
       shell: msys2 {0}
       run: |    
         wget https://download.qemu.org/qemu-${GITHUB_REF_NAME#"v"}.tar.xz
         export MSYS=winsymlinks:lnk
         tar -xf qemu-${GITHUB_REF_NAME#"v"}.tar.xz

     - name: Build it
       shell: msys2 {0}
       run: |
         cd qemu-${GITHUB_REF_NAME#"v"}
         ./configure --prefix=$(pwd)/qemu \
                     --disable-guest-agent \
                     --disable-werror \
                     --enable-strip
         cd build
         meson compile && meson install
         cd ..
         7z a qemu-win-x64.zip ./qemu
         
     - name: Upload the artifact
       uses: actions/upload-artifact@v4
       with:
           name: win64
           path: ${{ github.workspace }}/qemu-*/qemu-win-x64.zip
           if-no-files-found: error
         
  publish-release:
    needs: [build-mac, build-linux, build-win64]
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          path: qemu
          merge-multiple: true
      - name: Generate CHECKSUMS
        run: |
          touch CHECKSUMS
          echo "$(shasum -a 512 $GITHUB_WORKSPACE/qemu/qemu-${GITHUB_REF_NAME#"v"}/qemu-mac-arm64.zip)" >> CHECKSUMS
          echo "$(shasum -a 512 $GITHUB_WORKSPACE/qemu/qemu-${GITHUB_REF_NAME#"v"}/qemu-linux-x64.zip)" >> CHECKSUMS
          echo "$(shasum -a 512 $GITHUB_WORKSPACE/qemu/qemu-${GITHUB_REF_NAME#"v"}/qemu-win-x64.zip)" >> CHECKSUMS
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "qemu/qemu-*/qemu-*.zip,CHECKSUMS"
