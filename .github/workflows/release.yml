name: Build QEMU on version tag

on:
  push:
    tags:
      - v*

jobs:
  build-mac:
    runs-on: macos-14
    steps:
        - name: Download dependencies
          run: |
            brew upgrade
            
            brew install libtool bison capstone dbus \
                 dtc flex gettext git glib gnutls \
                 jpeg-turbo libffi libgcrypt \
                 libpng libslirp libssh libusb lzo make meson \
                 nettle ninja pixman pkg-config python@3.10 \
                 snappy spice-protocol vde zlib zstd
        
        - name: Fetch QEMU distribution
          run: |
            wget https://download.qemu.org/qemu-${GITHUB_REF_NAME#"v"}.tar.xz
            tar -xf qemu-${GITHUB_REF_NAME#"v"}.tar.xz
        - name: Build
          run: |
            cd qemu-${GITHUB_REF_NAME#"v"}

            export PYTHON=$HOMEBREW_PREFIX/opt/python@3.10/libexec/bin/python3
            ./configure --prefix=$(pwd)/qemu \
                        --disable-bsd-user \
                        --disable-guest-agent \
                        --disable-sdl \
                        --disable-gtk \
                        --enable-cocoa \
                        --enable-capstone \
                        --enable-libssh \
                        --enable-zstd
                        
            gmake install
            zip -r qemu-mac-arm64.zip ./qemu
        
        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with: 
            name: mac-arm64
            path: qemu-mac-arm64.zip
  build-linux:
    runs-on: ubuntu-latest
    steps:
        - name: Download dependencies
          run: |
            sudo apt install git libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev ninja-build \
                             libaio-dev libbluetooth-dev libcapstone-dev libbrlapi-dev libbz2-dev \
                             libcap-ng-dev libcurl4-gnutls-dev libgtk-3-dev \
                             libibverbs-dev libjpeg8-dev libncurses5-dev libnuma-dev \
                             librbd-dev librdmacm-dev \
                             libsasl2-dev libsdl2-dev libseccomp-dev libsnappy-dev libssh-dev \
                             libvde-dev libvdeplug-dev libvte-2.91-dev libxen-dev liblzo2-dev \
                             libnfs-dev libiscsi-dev libzstd-dev
        
        - name: Fetch QEMU distribution
          run: |
            wget https://download.qemu.org/qemu-${GITHUB_REF_NAME#"v"}.tar.xz
            tar -xf qemu-${GITHUB_REF_NAME#"v"}.tar.xz
        - name: Build
          run: |
            cd qemu-${GITHUB_REF_NAME#"v"}
            ./configure --prefix=$(pwd)/qemu \
                        --disable-bsd-user \
                        --disable-guest-agent \
                        --enable-gtk \
                        --enable-capstone \
                        --enable-curses \
                        --enable-fdt=system \
                        --enable-libssh \
                        --enable-vde \
                        --enable-zstd \
                        --extra-cflags=-DNCURSES_WIDECHAR=1
            make install
            zip -r qemu-linux-x64.zip ./qemu
        
        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with: 
            name: linux-x64
            path: qemu-linux-x64.zip

  build-win64:
    runs-on: windows-latest
    steps:
      - name: Setup MSYS2 and install dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain 
            git 
            python 
            ninja
            mingw-w64-x86_64-glib2 
            mingw-w64-x86_64-pixman 
            python-setuptools
            mingw-w64-x86_64-gtk3 
            mingw-w64-x86_64-SDL2 
            mingw-w64-x86_64-libslirp 
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-capstone
            mingw-w64-x86_64-zstd
            mingw-w64-x86_64-libssh
            tar 
            zip
            
      - name: Get distribution of QEMU
        shell: msys2 {0}
        run: |    
          wget https://download.qemu.org/qemu-${GITHUB_REF_NAME#"v"}.tar.xz
          export MSYS=winsymlinks:lnk
          tar -xf qemu-${GITHUB_REF_NAME#"v"}.tar.xz

      - name: Build it
        shell: msys2 {0}
        run: |
          cd qemu-${GITHUB_REF_NAME#"v"}
          ./configure --prefix=$(pwd)/qemu \
                      --disable-bsd-user \
                      --disable-guest-agent \
                      --enable-capstone \
                      --enable-libssh \
                      --enable-zstd \
                      --enable-gtk \
                      --enable-sdl
          make install
          zip -r qemu-win-x64.zip ./qemu
      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with: 
          name: win64
          path: qemu-win-x64.zip
          
  publish-release:
    needs: [build-mac, build-linux, build-win64]
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            qemu-mac-arm64.zip
            qemu-linux-x64.zip
            qemu-win-x64.zip
